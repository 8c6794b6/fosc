#!/bin/sh
#|-*- mode: lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#

(ros:ensure-asdf)
(ql:quickload '(:fosc) :silent t)

(defpackage :cov
  (:use :cl :fosc))

(in-package :cov)

(push :coverage *features*)

#+sbcl
(require :sb-cover)

(defun call-with-coverage (thunk)
  #+sbcl
  (with-compilation-unit
      (:policy '(optimize (sb-cover:store-coverage-data 3)))
    (funcall thunk)
    (sb-cover:report "/tmp/coverage-sbcl-fosc/"))
  #+ccl
  (progn
    (setq ccl:*compile-code-coverage* t)
    (funcall thunk)
    (ccl:report-coverage "/tmp/coverage-ccl-fosc/index.html")))

(defmacro with-coverage (&body body)
  `(call-with-coverage (lambda () ,@body)))

(defun main (&rest argv)
  (declare (ignorable argv))
  ;; XXX: Not working. Use of `unwind-protect' is to recompile the package
  ;; compiled with code coverage option enabled, though something went wrong
  ;; and last compiled system insists. Use of *features* to enable/disable
  ;; inline option may not work well with ASDF.
  (unwind-protect
       (with-coverage
         (asdf:load-system :fosc/tests
                           :force '(:fosc :fosc/tests)
                           :force-not '(:fast-io))
         (asdf:test-system :fosc))
    ;; (setf *features* (remove :coverage *features*))
    (asdf:load-system :fosc
                      :force '(:fosc)
                      :force-not '(:fast-io))))
